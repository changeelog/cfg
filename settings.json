{
  // Default formatter settings for various file types
  "[css]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[javascript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[markdown]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[powershell]": {
    "editor.defaultFormatter": "ms-vscode.powershell"
  },
  "[typescript]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[typescriptreact]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[json]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[jsonc]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[html]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[scss]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[less]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[graphql]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[vue]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[xml]": {
    "editor.defaultFormatter": "redhat.vscode-xml"
  },
  "[python]": {
    "editor.defaultFormatter": "ms-python.python"
  },
  "[dockerfile]": {
    "editor.defaultFormatter": "ms-azuretools.vscode-docker"
  },
  "[plaintext]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },

  // Custom UI appearance settings
  "apc.font.family": "Jetbrains Mono",
  "apc.header": {
    "height": 22
  },
  "apc.listRow": {
    "height": 30,
    "lists": ["quick-input-list", "results"]
  },
  "apc.stylesheet": {
    ".editor-group-watermark": {
      "font-size": "15px !important"
    },
    ".filematch .monaco-count-badge": "padding: 5px 6px 0 6px !important",
    ".filematch .monaco-icon-label:before, .custom-list-row.results .monaco-list-row .monaco-icon-label:before": "background-position: 0 bottom !important",
    ".inline-tabs-placeholder": "display: none !important;",
    ".monaco-editor .cursor": "background: linear-gradient(to bottom, #00FF00, #00FF00) !important;  color: #161616 !important",
    ".monaco-editor .scroll-decoration": "display: none !important",
    ".monaco-hover": "border: 1px solid #007ACC !important;",
    ".monaco-scrollable-element > .shadow.top": "display: none !important",
    ".monaco-workbench .monaco-list:not(.element-focused):focus:before": "outline: none !important",
    ".panel .composite.title": "visibility: hidden !important",
    ".quick-input-list-row div": "display: flex !important; align-items: center !important",
    ".quick-input-widget": {
      "background-color": "rgb(30, 30, 30) !important",
      "border": "1px solid #007ACC !important",
      "border-radius": "10px !important",
      "left": "41% !important",
      "padding": "15px !important",
      "top": "250px !important",
      "width": "900px !important"
    },
    ".quick-input-widget .monaco-inputbox": {
      "border-radius": "5px!important",
      "padding": "10px !important"
    },
    ".quick-input-widget .monaco-list-row": "position:static!important;border-bottom: 1px solid #333942;padding:5px!important;height:auto!important;",
    ".quick-input-widget .monaco-list-rows": "top: 0 !important;max-height:670px;min-height:300px;",
    ".quick-input-widget .quick-input-header": "padding:0px!important;margin-bottom:10px;",
    ".quick-input-widget .quick-input-list .quick-input-list-entry.quick-input-list-separator-border": "border-top-width:0px!important;",
    ".quick-input-widget .quick-input-list-entry": "position:relative;padding:0 5px 0px 15px;",
    ".quick-input-widget .quick-input-list-entry .codicon[class*=codicon-]": "font-size:12px;",
    ".quick-input-widget.show-file-icons, .editor-widget.find-widget": "box-shadow: none !important",
    ".sidebar": "border: none !important",
    ".sidebar .title-label": "padding: 0 !important",
    ".sidebar .title-label h2": "line-height: 2.8 !important",
    ".title-actions": "display: none !important",
    ".title.show-file-icons .label-container .monaco-icon-label.file-icon": "padding-bottom: 6px !important",
    ".tree": "border: 1px solid #007ACC !important;"
  },

  // Editor and UI settings
  "breadcrumbs.enabled": false,
  "chat.editor.fontFamily": "JetBrains Mono",
  "debug.console.fontFamily": "Jetbrains Mono",
  "debug.terminal.clearBeforeReusing": true,
  "diffEditor.ignoreTrimWhitespace": false,
  "editor.accessibilitySupport": "off",
  "editor.bracketPairColorization.enabled": true,
  "editor.codeActionsOnSave": {
    "source.fixAll": "explicit"
  },
  "editor.cursorSmoothCaretAnimation": "on",
  "editor.defaultFormatter": "esbenp.prettier-vscode",
  "editor.fontFamily": "Jetbrains Mono",
  "editor.fontLigatures": true,
  "editor.fontSize": 15,
  "editor.formatOnSave": true,
  "editor.guides.bracketPairs": "active",
  "editor.inlayHints.fontFamily": "Jetbrains Mono",
  "editor.inlineSuggest.enabled": true,
  "editor.letterSpacing": 0.5,
  "editor.lineHeight": 0,
  "editor.lineNumbers": "relative",
  "editor.linkedEditing": true,
  "editor.minimap.enabled": false,
  "editor.overviewRulerBorder": false,
  "editor.renderLineHighlight": "gutter",
  "editor.semanticHighlighting.enabled": false,
  "editor.smoothScrolling": true,
  "editor.stickyScroll.enabled": true,
  "editor.suggest.insertMode": "replace",
  "editor.suggestFontSize": 14,
  "editor.tabSize": 2,
  "editor.wordWrap": "on",
  "errorLens.enabledDiagnosticLevels": ["error", "warning"],
  "errorLens.excludePatterns": [
    "[\"node_modules\", \"**/node_modules\"]",
    "\"node_modules\"",
    "node_modules",
    " [\"**/*.{js}\"]",
    "**/node_modules"
  ],
  "errorLens.fontStyleItalic": true,
  "errorLens.light": {},
  "errorLens.messageTemplate": "$message - $source",
  "errorLens.severityText": ["ERROR", "WARNING", "HINT", "ERROR"],
  "eslint.lintTask.options": "npm run lint",
  "explorer.compactFolders": true,
  "explorer.confirmDelete": false,
  "explorer.confirmDragAndDrop": false,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.expand": false,
  "explorer.fileNesting.patterns": {
    "//": "Last update at 5/2/2024, 10:57:52 PM",

    // ASP.NET related file nesting
    "*.asax": "$(capture).*.cs, $(capture).*.vb",
    "*.ascx": "$(capture).*.cs, $(capture).*.vb",
    "*.ashx": "$(capture).*.cs, $(capture).*.vb",
    "*.aspx": "$(capture).*.cs, $(capture).*.vb",

    // Avalonia XAML file nesting
    "*.axaml": "$(capture).axaml.cs",

    // Dart BLoC pattern file nesting
    "*.bloc.dart": "$(capture).event.dart, $(capture).state.dart",

    // C/C++ header file nesting
    "*.c": "$(capture).h",
    "*.cc": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cpp": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",
    "*.cxx": "$(capture).hpp, $(capture).h, $(capture).hxx, $(capture).hh",

    // JavaScript and TypeScript file nesting
    "*.cjs": "$(capture).cjs.map, $(capture).*.cjs, $(capture)_*.cjs",
    "*.js": "$(capture).js.map, $(capture).*.js, $(capture)_*.js",
    "*.jsx": "$(capture).js, $(capture).*.jsx, $(capture)_*.js, $(capture)_*.jsx, $(capture).less, $(capture).module.less",
    "*.mjs": "$(capture).mjs.map, $(capture).*.mjs, $(capture)_*.mjs",
    "*.ts": "$(capture).js, $(capture).d.ts.map, $(capture).*.ts, $(capture)_*.js, $(capture)_*.ts",
    "*.tsx": "$(capture).ts, $(capture).*.tsx, $(capture)_*.ts, $(capture)_*.tsx, $(capture).less, $(capture).module.less, $(capture).scss, $(capture).module.scss",

    // Angular component file nesting
    "*.component.ts": "$(capture).component.html, $(capture).component.spec.ts, $(capture).component.css, $(capture).component.scss, $(capture).component.sass, $(capture).component.less",

    // C# file nesting
    "*.cs": "$(capture).*.cs",
    "*.cshtml": "$(capture).cshtml.cs",
    "*.csproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",

    // CSS file nesting
    "*.css": "$(capture).css.map, $(capture).*.css",

    // Dart file nesting
    "*.dart": "$(capture).freezed.dart, $(capture).g.dart",

    // Database file nesting
    "*.db": "${capture}.${extname}-*",
    "*.db3": "${capture}.${extname}-*",
    "*.s3db": "${capture}.${extname}-*",
    "*.sdb": "${capture}.${extname}-*",
    "*.sqlite": "${capture}.${extname}-*",
    "*.sqlite3": "${capture}.${extname}-*",

    // Elixir file nesting
    "*.ex": "$(capture).html.eex, $(capture).html.heex, $(capture).html.leex",

    // F# file nesting
    "*.fs": "$(capture).fs.js, $(capture).fs.js.map, $(capture).fs.jsx, $(capture).fs.ts, $(capture).fs.tsx, $(capture).fs.rs, $(capture).fs.php, $(capture).fs.dart",

    // Go file nesting
    "*.go": "$(capture)_test.go",

    // Java file nesting
    "*.java": "$(capture).class",

    // ASP.NET Master Page file nesting
    "*.master": "$(capture).*.cs, $(capture).*.vb",

    // TypeScript module file nesting
    "*.module.ts": "$(capture).resolver.ts, $(capture).controller.ts, $(capture).service.ts",

    // TypeScript declaration file nesting
    "*.mts": "$(capture).mts.map, $(capture).*.mts, $(capture)_*.mts",

    // Web Deploy publish profile file nesting
    "*.pubxml": "$(capture).pubxml.user",

    // Razor file nesting
    "*.razor": "$(capture).razor.cs, $(capture).razor.css, $(capture).razor.scss",

    // Resource file nesting
    "*.resx": "$(capture).*.resx, $(capture).designer.cs, $(capture).designer.vb",

    // LaTeX file nesting
    "*.tex": "$(capture).acn, $(capture).acr, $(capture).alg, $(capture).aux, $(capture).bbl, $(capture).blg, $(capture).fdb_latexmk, $(capture).fls, $(capture).glg, $(capture).glo, $(capture).gls, $(capture).idx, $(capture).ind, $(capture).ist, $(capture).lof, $(capture).log, $(capture).lot, $(capture).out, $(capture).pdf, $(capture).synctex.gz, $(capture).toc, $(capture).xdv",

    // Visual Basic project file nesting
    "*.vbproj": "*.config, *proj.user, appsettings.*, bundleconfig.json",

    // Vue.js file nesting
    "*.vue": "$(capture).*.ts, $(capture).*.js, $(capture).story.vue",

    // XAML file nesting
    "*.xaml": "$(capture).xaml.cs",

    // Svelte layout file nesting
    "+layout.svelte": "+layout.ts,+layout.ts,+layout.js,+layout.server.ts,+layout.server.js,+layout.gql",

    // Svelte page file nesting
    "+page.svelte": "+page.server.ts,+page.server.js,+page.ts,+page.js,+page.gql",

    // Clang-related file nesting
    ".clang-tidy": ".clang-format, .clangd, compile_commands.json",

    // Environment file nesting
    ".env": "*.env, .env.*, .envrc, env.d.ts",

    // Git-related file nesting
    ".gitignore": ".gitattributes, .gitmodules, .gitmessage, .mailmap, .git-blame*",

    // Eclipse project file nesting
    ".project": ".classpath",

    // Last update timestamp (comment)
    "//": "Last update at 5/2/2024, 10:57:52 PM",

    // Bazel build system file nesting
    "BUILD.bazel": "*.bzl, *.bazel, *.bazelrc, bazel.rc, .bazelignore, .bazelproject, WORKSPACE",

    // CMake file nesting
    "CMakeLists.txt": "*.cmake, *.cmake.in, .cmake-format.yaml, CMakePresets.json, CMakeCache.txt",

    // Rust project file nesting
    "Cargo.toml": ".clippy.toml, .rustfmt.toml, cargo.lock, clippy.toml, cross.toml, rust-toolchain.toml, rustfmt.toml",

    // Docker-related file nesting
    "Dockerfile": "*.dockerfile, .devcontainer.*, .dockerignore, compose.*, docker-compose.*, dockerfile*",

    // C# interface implementation file nesting
    "I*.cs": "$(capture).cs",

    // Makefile-related file nesting
    "Makefile": "*.mk",

    // Python project file nesting (Pipenv)
    "Pipfile": ".editorconfig, .flake8, .isort.cfg, .python-version, Pipfile, Pipfile.lock, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",

    // README file nesting
    "README*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README*, Readme*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",

    // Alternative README file nesting (capitalize)
    "Readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README*, Readme*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",

    // Alternative README file nesting (lowercase)
    "readme*": "AUTHORS, Authors, BACKERS*, Backers*, CHANGELOG*, CITATION*, CODEOWNERS, CODE_OF_CONDUCT*, CONTRIBUTING*, CONTRIBUTORS, COPYING*, CREDITS, Changelog*, Citation*, Code_Of_Conduct*, Codeowners, Contributing*, Contributors, Copying*, Credits, GOVERNANCE.MD, Governance.md, HISTORY.MD, History.md, LICENSE*, License*, MAINTAINERS, Maintainers, README*, Readme*, SECURITY.MD, SPONSORS*, Security.md, Sponsors*, authors, backers*, changelog*, citation*, code_of_conduct*, codeowners, contributing*, contributors, copying*, credits, governance.md, history.md, license*, maintainers, readme*, security.md, sponsors*",

    // Laravel Artisan file nesting
    "artisan": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, server.php, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, webpack.mix.js, windi.config.*",

    // Astro configuration file nesting
    "astro.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",

    // PHP Composer file nesting
    "composer.json": ".php*.cache, composer.lock, phpunit.xml*, psalm*.xml",

    // Nix default configuration file nesting
    "default.nix": "shell.nix",

    // Deno configuration file nesting
    "deno.json*": "*.env, .env.*, .envrc, api-extractor.json, deno.lock, env.d.ts, import-map.json, import_map.json, jsconfig.*, tsconfig.*, tsdoc.*",

    // Nix flake file nesting
    "flake.nix": "flake.lock",

    // Gatsby configuration file nesting
    "gatsby-config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, gatsby-browser.*, gatsby-node.*, gatsby-ssr.*, gatsby-transformer.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",

    // Ruby Gemfile nesting
    "gemfile": ".ruby-version, gemfile.lock",

    // Go module file nesting
    "go.mod": ".air*, go.sum",

    // Go workspace file nesting
    "go.work": "go.work.sum",

    // Python Hatch configuration file nesting
    "hatch.toml": ".editorconfig, .flake8, .isort.cfg, .python-version, hatch.toml, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",

    // Elixir Mix project file nesting
    "mix.exs": ".credo.exs, .dialyzer_ignore.exs, .formatter.exs, .iex.exs, .tool-versions, mix.lock",

    // Next.js configuration file nesting
    "next.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, next-env.d.ts, next-i18next.config.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",

    // Nuxt.js configuration file nesting (continued)
    "nuxt.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .nuxtignore, .nuxtrc, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",

    // Node.js package.json file nesting
    "package.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",

    // Flutter/Dart pubspec.yaml file nesting
    "pubspec.yaml": ".metadata, .packages, all_lint_rules.yaml, analysis_options.yaml, build.yaml, pubspec.lock, pubspec_overrides.yaml",

    // Python pyproject.toml file nesting
    "pyproject.toml": ".commitlint*, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .flake8, .flowconfig, .isort.cfg, .jslint*, .lintstagedrc*, .markdownlint*, .pdm-python, .pdm.toml, .prettier*, .pylintrc, .python-version, .ruff.toml, .stylelint*, .textlint*, .xo-config*, .yamllint*, MANIFEST.in, Pipfile, Pipfile.lock, biome.json, commitlint*, dangerfile*, dlint.json, dprint.json*, eslint*, hatch.toml, lint-staged*, pdm.lock, phpcs.xml, poetry.lock, poetry.toml, prettier*, pyproject.toml, pyrightconfig.json, requirements*.in, requirements*.pip, requirements*.txt, ruff.toml, setup.cfg, setup.py, stylelint*, tox.ini, tslint*, xo.config.*",

    // Quasar configuration file nesting
    "quasar.conf.js": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, quasar.extensions.json, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",

    // Remix configuration file nesting
    "remix.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, remix.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",

    // Requirements.txt file nesting
    "requirements.txt": ".editorconfig, .flake8, .isort.cfg, .python-version, requirements*.in, requirements*.pip, requirements*.txt, tox.ini",

    // Rush.json file nesting
    "rush.json": ".browserslist*, .circleci*, .commitlint*, .cz-config.js, .czrc, .dlint.json, .dprint.json*, .editorconfig, .eslint*, .firebase*, .flowconfig, .github*, .gitlab*, .gitmojirc.json, .gitpod*, .huskyrc*, .jslint*, .knip.*, .lintstagedrc*, .markdownlint*, .node-version, .nodemon*, .npm*, .nvmrc, .pm2*, .pnp.*, .pnpm*, .prettier*, .pylintrc, .release-please*.json, .releaserc*, .ruff.toml, .sentry*, .simple-git-hooks*, .stackblitz*, .styleci*, .stylelint*, .tazerc*, .textlint*, .tool-versions, .travis*, .versionrc*, .vscode*, .watchman*, .xo-config*, .yamllint*, .yarnrc*, Procfile, apollo.config.*, appveyor*, azure-pipelines*, biome.json, bower.json, build.config.*, bun.lockb, commitlint*, crowdin*, dangerfile*, dlint.json, dprint.json*, electron-builder.*, eslint*, firebase.json, grunt*, gulp*, jenkins*, knip.*, lerna*, lint-staged*, nest-cli.*, netlify*, nodemon*, npm-shrinkwrap.json, nx.*, package-lock.json, package.nls*.json, phpcs.xml, pm2.*, pnpm*, prettier*, pullapprove*, pyrightconfig.json, release-please*.json, release-tasks.sh, release.config.*, renovate*, rollup.config.*, rspack*, ruff.toml, simple-git-hooks*, sonar-project.properties, stylelint*, tslint*, tsup.config.*, turbo*, typedoc*, unlighthouse*, vercel*, vetur.config.*, webpack*, workspace.json, xo.config.*, yarn*",

    // Python setup.cfg file nesting
    "setup.cfg": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, tox.ini",

    // Python setup.py file nesting
    "setup.py": ".editorconfig, .flake8, .isort.cfg, .python-version, MANIFEST.in, requirements*.in, requirements*.pip, requirements*.txt, setup.cfg, setup.py, tox.ini",

    // Shims file nesting
    "shims.d.ts": "*.d.ts",

    // Svelte configuration file nesting
    "svelte.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, houdini.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, mdsvex.config.js, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vite.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",

    // Typescript configuration file nesting
    "tsconfig.json": "tsconfig.*.json",

    // Vite configuration file nesting
    "vite.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*",

    // Vue configuration file nesting
    "vue.config.*": "*.env, .babelrc*, .codecov, .cssnanorc*, .env.*, .envrc, .htmlnanorc*, .lighthouserc.*, .mocha*, .postcssrc*, .terserrc*, api-extractor.json, ava.config.*, babel.config.*, capacitor.config.*, contentlayer.config.*, cssnano.config.*, cypress.*, env.d.ts, formkit.config.*, formulate.config.*, histoire.config.*, htmlnanorc.*, i18n.config.*, ionic.config.*, jasmine.*, jest.config.*, jsconfig.*, karma*, lighthouserc.*, panda.config.*, playwright.config.*, postcss.config.*, puppeteer.config.*, rspack.config.*, svgo.config.*, tailwind.config.*, tsconfig.*, tsdoc.*, uno.config.*, unocss.config.*, vitest.config.*, vuetify.config.*, webpack.config.*, windi.config.*"
  },
  "extensions.autoUpdate": "onlyEnabledExtensions",
  "extensions.ignoreRecommendations": false,
  "files.autoSave": "afterDelay",
  "git.autofetch": true,
  "goToTest.specFilePatterns": [
    "{f}.spec{e}",
    "{f}.test{e}",
    "{f}-spec{e}",
    "{f}-test{e}",
    "{f}_spec{e}",
    "{f}_test{e}",
    "{f}Tests{e}",
    "{f}tests{e}",
    "{f}Tests",
    "{f}Test"
  ],
  "highlight.regexes": {
    "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:FIXME|FIX|BUG|UGLY|DEBUG|HACK)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
      "decorations": [
        {
          "backgroundColor": "#cc0000",
          "color": "#1f1f1f",
          "fontWeight": "bold",
          "overviewRulerColor": "#cc0000"
        },
        {
          "backgroundColor": "#cc0000",
          "color": "#1f1f1f"
        }
      ],
      "filterFileRegex": ".*(?<!CHANGELOG.md)$"
    },
    "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:IDEA)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
      "decorations": [
        {
          "backgroundColor": "#cc00cc",
          "color": "#1f1f1f",
          "fontWeight": "bold",
          "overviewRulerColor": "#cc00cc"
        },
        {
          "backgroundColor": "#cc00cc",
          "color": "#1f1f1f"
        }
      ],
      "filterFileRegex": ".*(?<!CHANGELOG.md)$"
    },
    "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *(?:REVIEW|OPTIMIZE|TSC)(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
      "decorations": [
        {
          "backgroundColor": "#00ccff",
          "color": "#1f1f1f",
          "fontWeight": "bold",
          "overviewRulerColor": "#00ccff"
        },
        {
          "backgroundColor": "#00ccff",
          "color": "#1f1f1f"
        }
      ],
      "filterFileRegex": ".*(?<!CHANGELOG.md)$"
    },
    "((?:<!-- *)?(?:#|// @|//|./\\*+|<!--|--|\\* @|{!|{{!--|{{!) *TODO(?:\\s*\\([^)]+\\))?:?)((?!\\w)(?: *-->| *\\*/| *!}| *--}}| *}}|(?= *(?:[^:]//|/\\*+|<!--|@|--|{!|{{!--|{{!))|(?: +[^\\n@]*?)(?= *(?:[^:]//|/\\*+|<!--|@|--(?!>)|{!|{{!--|{{!))|(?: +[^@\\n]+)?))": {
      "decorations": [
        {
          "backgroundColor": "#ffcc00",
          "color": "#1f1f1f",
          "fontWeight": "bold",
          "overviewRulerColor": "#ffcc00"
        },
        {
          "backgroundColor": "#ffcc00",
          "color": "#1f1f1f"
        }
      ],
      "filterFileRegex": ".*(?<!CHANGELOG.md)$"
    }
  },
  "javascript.suggest.names": false,
  "javascript.updateImportsOnFileMove.enabled": "always",
  "json.schemas": [],
  "markdown.preview.fontFamily": "Jetbrains Mono",
  "notebook.output.fontFamily": "Jetbrains Mono",
  "prettier.semi": false,
  "prettier.singleAttributePerLine": true,
  "prettier.singleQuote": true,
  "prettier.trailingComma": "all",
  "projectManager.git.baseFolders": ["$home/workspace"],
  "projectManager.sortList": "Recent",
  "redhat.telemetry.enabled": false,
  "scm.inputFontFamily": "Jetbrains Mono",
  "security.workspace.trust.untrustedFiles": "open",
  "sortJSON.orderOverride": [
    "name",
    "version",
    "main",
    "module",
    "types",
    "typings",
    "files",
    "publishConfig",
    "repository",
    "scripts",
    "prefix",
    "description",
    "body"
  ],
  "sortJSON.orderUnderride": [
    "resolutions",
    "dependencies",
    "devDependencies",
    "peerDependencies",
    "cSpell.userWords"
  ],
  "terminal.explorerKind": "integrated",
  "terminal.integrated.defaultProfile.osx": "zsh",
  "terminal.integrated.defaultProfile.windows": "PowerShell",
  "terminal.integrated.enableMultiLinePasteWarning": "auto",
  "terminal.integrated.env.osx": {
    "FIG_NEW_SESSION": "1"
  },
  "terminal.integrated.fontFamily": "JetBrainsMono Nerd Font Mono",
  "terminal.integrated.gpuAcceleration": "on",
  "terminal.integrated.suggest.builtinCompletions": {
    "pwshCode": true,
    "pwshGit": true
  },
  "typescript.preferences.importModuleSpecifier": "relative",
  "typescript.updateImportsOnFileMove.enabled": "always",
  "update.mode": "start",
  "update.showReleaseNotes": false,
  "window.commandCenter": false,
  "window.density.editorTabHeight": "compact",
  "window.title": "",
  "window.zoomLevel": 1,
  "workbench.colorTheme": "Tokyo Night Storm Frameless",
  "workbench.editor.editorActionsLocation": "hidden",
  "workbench.editor.empty.hint": "hidden",
  "workbench.editor.enablePreviewFromCodeNavigation": true,
  "workbench.editor.enablePreviewFromQuickOpen": true,
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.editor.labelFormat": "short",
  "workbench.editor.limit.enabled": true,
  "workbench.editor.limit.excludeDirty": true,
  "workbench.editor.limit.value": 3,
  "workbench.editor.pinnedTabSizing": "compact",
  "workbench.editor.tabActionCloseVisibility": false,
  "workbench.editor.tabSizing": "shrink",
  "workbench.editorAssociations": {
    "{git,gitlens}:/**/*.{md,csv,svg}": "default"
  },
  "workbench.externalBrowser": "Arc",
  "workbench.iconTheme": "next-icons-light",
  "workbench.layoutControl.enabled": false,
  "workbench.list.smoothScrolling": true,
  "workbench.sideBar.location": "right",
  "workbench.startupEditor": "none",
  "yaml.customTags": [
    "!And",
    "!And sequence",
    "!If",
    "!If sequence",
    "!Not",
    "!Not sequence",
    "!Equals",
    "!Equals sequence",
    "!Or",
    "!Or sequence",
    "!FindInMap",
    "!FindInMap sequence",
    "!Base64",
    "!Join",
    "!Join sequence",
    "!Cidr",
    "!Ref",
    "!Sub",
    "!Sub sequence",
    "!GetAtt",
    "!GetAZs",
    "!ImportValue",
    "!ImportValue sequence",
    "!Select",
    "!Select sequence",
    "!Split",
    "!Split sequence"
  ],
  "zenMode.centerLayout": false,
  "zenMode.fullScreen": false,
  "zenMode.hideLineNumbers": false
}
