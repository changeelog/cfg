{
  "Export Interface": {
    "prefix": "expint",
    "description": "Exports an interface with a given name and structure",
    "body": [
      "export interface ${1:first} {${2:second}}"
    ]
  },
  "Export Type": {
    "prefix": "exptp",
    "description": "Exports a type with a given name and structure",
    "body": [
      "export type ${1:first} = {${2:second}}"
    ]
  },
  "Import Redux Connect": {
    "prefix": "redux",
    "description": "Imports Redux connect",
    "body": [
      "import { connect } from 'react-redux'"
    ]
  },
  "PropType Any": {
    "prefix": "ptany",
    "description": "Any prop type",
    "body": [
      "PropTypes.any"
    ]
  },
  "PropType Array Of": {
    "prefix": "ptao",
    "description": "An array of a certain type",
    "body": [
      "PropTypes.arrayOf($0)"
    ]
  },
  "PropType Array Of Required": {
    "prefix": "ptaor",
    "description": "An array of a certain type required",
    "body": [
      "PropTypes.arrayOf($0).isRequired"
    ]
  },
  "PropType Element Required": {
    "prefix": "ptelr",
    "description": "React element prop type required",
    "body": [
      "PropTypes.element.isRequired"
    ]
  },
  "PropType Enum": {
    "prefix": "pte",
    "description": "Prop type limited to specific values by treating it as an enum",
    "body": [
      "PropTypes.oneOf(['$0'])"
    ]
  },
  "PropType Enum Required": {
    "prefix": "pter",
    "description": "Prop type limited to specific values by treating it as an enum required",
    "body": [
      "PropTypes.oneOf(['$0']).isRequired"
    ]
  },
  "PropType Exact": {
    "prefix": "ptex",
    "description": "An object with warnings on extra properties",
    "body": [
      "PropTypes.exact({",
      "  $0",
      "})"
    ]
  },
  "PropType Exact Required": {
    "prefix": "ptexr",
    "description": "An object with warnings on extra properties required",
    "body": [
      "PropTypes.exact({",
      "  $0",
      "}).isRequired"
    ]
  },
  "PropType Instance Of": {
    "prefix": "pti",
    "description": "Is an instance of a class prop type",
    "body": [
      "PropTypes.instanceOf($0)"
    ]
  },
  "PropType Instance Of Required": {
    "prefix": "ptir",
    "description": "Is an instance of a class prop type required",
    "body": [
      "PropTypes.instanceOf($0).isRequired"
    ]
  },
  "PropType Object Of": {
    "prefix": "ptoo",
    "description": "An object with property values of a certain type",
    "body": [
      "PropTypes.objectOf($0)"
    ]
  },
  "PropType Object Of Required": {
    "prefix": "ptoor",
    "description": "An object with property values of a certain type required",
    "body": [
      "PropTypes.objectOf($0).isRequired"
    ]
  },
  "PropType One Of Type": {
    "prefix": "ptet",
    "description": "An object that could be one of many types",
    "body": [
      "PropTypes.oneOfType([",
      "  $0",
      "])"
    ]
  },
  "PropType One Of Type Required": {
    "prefix": "ptetr",
    "description": "An object that could be one of many types required",
    "body": [
      "PropTypes.oneOfType([",
      "  $0",
      "]).isRequired"
    ]
  },
  "PropType Shape": {
    "prefix": "ptsh",
    "description": "An object taking on a particular shape",
    "body": [
      "PropTypes.shape({",
      "  $0",
      "})"
    ]
  },
  "PropType Shape Required": {
    "prefix": "ptshr",
    "description": "An object taking on a particular shape required",
    "body": [
      "PropTypes.shape({",
      "  $0",
      "}).isRequired"
    ]
  },
  "React Native Component": {
    "prefix": "rnc",
    "description": "Creates a React Native component class",
    "body": [
      "import { Text, View } from 'react-native'",
      "import React, { Component } from 'react'",
      "",
      "export default class ${1:${TM_FILENAME_BASE}} extends Component {",
      "  render() {",
      "    return (",
      "      <View>",
      "        <Text>${1:first}</Text>",
      "      </View>",
      "    )",
      "  }",
      "}"
    ]
  },
  "React Native Component Export": {
    "prefix": "rnce",
    "description": "Creates a React Native component class with export",
    "body": [
      "import { Text, View } from 'react-native'",
      "import React, { Component } from 'react'",
      "",
      "export class ${1:${TM_FILENAME_BASE}} extends Component {",
      "  render() {",
      "    return (",
      "      <View>",
      "        <Text>${1:first}</Text>",
      "      </View>",
      "    )",
      "  }",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  },
  "React Native Component With Styles": {
    "prefix": "rncs",
    "description": "Creates a React Native component class with styles",
    "body": [
      "import { Text, StyleSheet, View } from 'react-native'",
      "import React, { Component } from 'react'",
      "",
      "export default class ${1:${TM_FILENAME_BASE}} extends Component {",
      "  render() {",
      "    return (",
      "      <View>",
      "        <Text>${1:first}</Text>",
      "      </View>",
      "    )",
      "  }",
      "}",
      "",
      "const styles = StyleSheet.create({})"
    ]
  },
  "React Native Functional Component": {
    "prefix": "rnf",
    "description": "Creates a React Native functional component",
    "body": [
      "import { View, Text } from 'react-native'",
      "import React from 'react'",
      "",
      "export default function ${1:${TM_FILENAME_BASE}}() {",
      "  return (",
      "    <View>",
      "      <Text>${1:first}</Text>",
      "    </View>",
      "  )",
      "}"
    ]
  },
  "React Native Functional Component With Styles": {
    "prefix": "rnfs",
    "description": "Creates a React Native functional component with styles",
    "body": [
      "import { StyleSheet, Text, View } from 'react-native'",
      "import React from 'react'",
      "",
      "export default function ${1:${TM_FILENAME_BASE}}() {",
      "  return (",
      "    <View>",
      "      <Text>${1:first}</Text>",
      "    </View>",
      "  )",
      "}",
      "",
      "const styles = StyleSheet.create({})"
    ]
  },
  "React Native Functional Export Component": {
    "prefix": "rnfe",
    "description": "Creates a React Native functional export component",
    "body": [
      "import { View, Text } from 'react-native'",
      "import React from 'react'",
      "",
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "  return (",
      "    <View>",
      "      <Text>${1:first}</Text>",
      "    </View>",
      "  )",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  },
  "React Native Functional Export Component With Styles": {
    "prefix": "rnfes",
    "description": "Creates a React Native functional export component with styles",
    "body": [
      "import { StyleSheet, Text, View } from 'react-native'",
      "import React from 'react'",
      "",
      "const ${1:${TM_FILENAME_BASE}} = () => {",
      "  return (",
      "    <View>",
      "      <Text>${1:first}</Text>",
      "    </View>",
      "  )",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}",
      "",
      "const styles = StyleSheet.create({})"
    ]
  },
  "React Native Import": {
    "prefix": "imrn",
    "description": "Imports a React Native component",
    "body": [
      "import { ${1:first} } from 'react-native'"
    ]
  },
  "React Native Pure Component": {
    "prefix": "rnpc",
    "description": "Creates a React Native pure component",
    "body": [
      "import { Text, View } from 'react-native'",
      "import React, { PureComponent } from 'react'",
      "",
      "export default class ${1:${TM_FILENAME_BASE}} extends PureComponent {",
      "  render() {",
      "    return (",
      "      <View>",
      "        <Text>${1:first}</Text>",
      "      </View>",
      "    )",
      "  }",
      "}"
    ]
  },
  "React Native Pure Component Export": {
    "prefix": "rnpce",
    "description": "Creates a React Native pure component with export",
    "body": [
      "import { Text, View } from 'react-native'",
      "import React, { PureComponent } from 'react'",
      "",
      "export class ${1:${TM_FILENAME_BASE}} extends PureComponent {",
      "  render() {",
      "    return (",
      "      <View>",
      "        <Text>${1:first}</Text>",
      "      </View>",
      "    )",
      "  }",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  },
  "React Native Styles": {
    "prefix": "rnstyle",
    "description": "Creates a StyleSheet style",
    "body": [
      "const styles = StyleSheet.create({${1:first}})"
    ]
  },
  "Redux Action": {
    "prefix": "rxaction",
    "description": "Creates a Redux action",
    "body": [
      "export const ${1:first} = (payload) => ({",
      "  type: ${2:second},",
      "  payload",
      "})",
      ""
    ]
  },
  "Redux Constant": {
    "prefix": "rxconst",
    "description": "Creates a Redux constant",
    "body": [
      "export const ${1:first} = '${1:first}'"
    ]
  },
  "Redux Reducer": {
    "prefix": "rxreducer",
    "description": "Creates a Redux reducer",
    "body": [
      "const initialState = {}",
      "",
      "export default (state = initialState, { type, payload }) => {",
      "  switch (type) {",
      "",
      "  case ${1:first}:",
      "    return { ...state, ...payload }",
      "",
      "  default:",
      "    return state",
      "  }",
      "}",
      ""
    ]
  },
  "Redux Selector": {
    "prefix": "rxselect",
    "description": "Creates a Redux selector",
    "body": [
      "import { createSelector } from 'reselect'",
      "",
      "export const ${1:first} = state => state.${2:second}"
    ]
  },
  "Redux Slice": {
    "prefix": "rxslice",
    "description": "Creates a Redux Toolkit slice",
    "body": [
      "import { createSlice } from '@reduxjs/toolkit'",
      "",
      "const initialState = {",
      "",
      "}",
      "",
      "const ${1:${TM_FILENAME_BASE}} = createSlice({",
      "  name: ${2:second},",
      "  initialState,",
      "  reducers: {}",
      "});",
      "",
      "export const {} = ${1:${TM_FILENAME_BASE}}.actions",
      "",
      "export default ${1:${TM_FILENAME_BASE}}.reducer"
    ]
  },
  "TypeScript React Arrow Function Component": {
    "prefix": "rafc",
    "description": "Creates a React Arrow Function Component with ES7 module system and TypeScript interface",
    "body": [
      "import React from 'react'",
      "",
      "type Props = {}",
      "",
      "const ${1:${TM_FILENAME_BASE}} = (props: Props) => {",
      "  return (",
      "    <div>${1:first}</div>",
      "  )",
      "}"
    ]
  },
  "TypeScript React Arrow Function Export Component": {
    "prefix": "rafce",
    "description": "Creates a React Arrow Function Component with ES7 module system and TypeScript interface",
    "body": [
      "import React from 'react'",
      "",
      "type Props = {}",
      "",
      "const ${1:${TM_FILENAME_BASE}} = (props: Props) => {",
      "  return (",
      "    <div>${1:first}</div>",
      "  )",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  },
  "TypeScript React Class Component": {
    "prefix": "rcc",
    "description": "Creates a React component class with ES7 module system and TypeScript interfaces",
    "body": [
      "import React, { Component } from 'react'",
      "",
      "type Props = {}",
      "",
      "type State = {}",
      "",
      "export default class ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {",
      "  state = {}",
      "",
      "  render() {",
      "    return (",
      "      <div>${1:first}</div>",
      "    )",
      "  }",
      "}"
    ]
  },
  "TypeScript React Class Component Redux": {
    "prefix": "rcredux",
    "description": "Creates a React component class with connected redux and ES7 module system and TypeScript interfaces",
    "body": [
      "import { connect } from 'react-redux'",
      "import React, { Component } from 'react'",
      "",
      "type Props = {}",
      "",
      "type State = {}",
      "",
      "export class ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {",
      "  state = {}",
      "",
      "  render() {",
      "    return (",
      "      <div>${1:first}</div>",
      "    )",
      "  }",
      "}",
      "",
      "const mapStateToProps = (state) => ({})",
      "",
      "const mapDispatchToProps = {}",
      "",
      "export default connect(mapStateToProps, mapDispatchToProps)(${1:${TM_FILENAME_BASE}})"
    ]
  },
  "TypeScript React Class Export Component": {
    "prefix": "rce",
    "description": "Creates a React component class with ES7 module system and TypeScript interfaces",
    "body": [
      "import React, { Component } from 'react'",
      "",
      "type Props = {}",
      "",
      "type State = {}",
      "",
      "class ${1:${TM_FILENAME_BASE}} extends Component<Props, State> {",
      "  state = {}",
      "",
      "  render() {",
      "    return (",
      "      <div>${1:first}</div>",
      "    )",
      "  }",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  },
  "TypeScript React Class Export Pure Component": {
    "prefix": "rpce",
    "description": "Creates a React pure component class with ES7 module system and TypeScript interface",
    "body": [
      "import React, { PureComponent } from 'react'",
      "",
      "type Props = {}",
      "",
      "class ${1:${TM_FILENAME_BASE}} extends PureComponent<Props> {",
      "  render() {",
      "    return (",
      "      <div>${1:first}</div>",
      "    )",
      "  }",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  },
  "TypeScript React Class Pure Component": {
    "prefix": "rpc",
    "description": "Creates a React pure component class with ES7 module system and TypeScript interface",
    "body": [
      "import React, { PureComponent } from 'react'",
      "",
      "type Props = {}",
      "",
      "export default class ${1:${TM_FILENAME_BASE}} extends PureComponent<Props> {",
      "  render() {",
      "    return (",
      "      <div>${1:first}</div>",
      "    )",
      "  }",
      "}"
    ]
  },
  "TypeScript React Functional Component": {
    "prefix": "rfc",
    "description": "Creates a React Functional Component with ES7 module system and TypeScript interface",
    "body": [
      "import React from 'react'",
      "",
      "type Props = {}",
      "",
      "export default function ${1:${TM_FILENAME_BASE}}({}: Props) {",
      "  return (",
      "    <div>${1:first}</div>",
      "  )",
      "}"
    ]
  },
  "TypeScript React Functional Export Component": {
    "prefix": "rfce",
    "description": "Creates a React Functional Component with ES7 module system and TypeScript interface",
    "body": [
      "import React from 'react'",
      "",
      "type Props = {}",
      "",
      "function ${1:${TM_FILENAME_BASE}}({}: Props) {",
      "  return (",
      "    <div>${1:first}</div>",
      "  )",
      "}",
      "",
      "export default ${1:${TM_FILENAME_BASE}}"
    ]
  }
}