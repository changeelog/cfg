{
  "Batch File Header": {
    "prefix": "bfh",
    "body": [
      "@echo off",
      "setlocal enabledelayedexpansion",
      "",
      "rem ${1:Script description}",
      "",
      "$0"
    ],
    "description": "Create a basic batch file header"
  },
  "For Loop": {
    "prefix": "for",
    "body": [
      "for %%${1:i} in (${2:item1 item2 item3}) do (",
      "    echo %%${1:i}",
      "    $0",
      ")"
    ],
    "description": "Create a for loop in batch"
  },
  "If Statement": {
    "prefix": "ifelse",
    "body": ["if ${1:condition} (", "    $0", ") else (", "    ", ")"],
    "description": "Create an if-else statement in batch"
  },
  "Function": {
    "prefix": "fn",
    "body": [":${1:functionName}", "$0", "goto :eof"],
    "description": "Create a function in batch"
  },
  "Set Variable": {
    "prefix": "setv",
    "body": ["set \"${1:variableName}=${2:value}\""],
    "description": "Set a variable in batch"
  },
  "Read User Input": {
    "prefix": "setp",
    "body": ["set /p \"${1:variableName}=${2:Enter a value: }\""],
    "description": "Read user input in batch"
  },
  "Error Handling": {
    "prefix": "errh",
    "body": [
      "if errorlevel 1 (",
      "    echo An error occurred",
      "    exit /b 1",
      ")"
    ],
    "description": "Basic error handling in batch"
  },
  "File Existence Check": {
    "prefix": "ifexists",
    "body": [
      "if exist \"${1:filename}\" (",
      "    echo File exists",
      ") else (",
      "    echo File does not exist",
      ")"
    ],
    "description": "Check if a file exists in batch"
  },
  "Directory Creation": {
    "prefix": "md",
    "body": [
      "if not exist \"${1:directoryPath}\" mkdir \"${1:directoryPath}\""
    ],
    "description": "Create a directory if it doesn't exist"
  },
  "Command Line Arguments": {
    "prefix": "args",
    "body": [
      "if \"%1\"==\"\" (",
      "    echo Usage: %0 <argument>",
      "    exit /b 1",
      ")",
      "set \"arg1=%1\""
    ],
    "description": "Handle command line arguments in batch"
  },
  "Check Error Level": {
    "prefix": "iferr",
    "body": [
      "if %errorlevel% geq ${1:number} (",
      "    echo Error level is equal to or greater than ${1:number}",
      "    $0",
      ")"
    ],
    "description": "Check whether exit code is equal to or greater than the number specified"
  },
  "Compare Strings": {
    "prefix": "ifstr",
    "body": [
      "if ${1|equ,neq,lss,leq,gtr,geq|} \"${2:string1}\" \"${3:string2}\" (",
      "    $0",
      ")"
    ],
    "description": "Compare two strings"
  },
  "For /L Loop": {
    "prefix": "forl",
    "body": [
      "for /L %%${1:i} in (${2:start},${3:step},${4:end}) do (",
      "    echo %%${1:i}",
      "    $0",
      ")"
    ],
    "description": "Create a For /L loop in batch"
  },
  "For /D Loop": {
    "prefix": "ford",
    "body": [
      "for /D %%${1:d} in (${2:directory_pattern}) do (",
      "    echo %%${1:d}",
      "    $0",
      ")"
    ],
    "description": "Create a For /D loop in batch"
  },
  "For /R Loop": {
    "prefix": "forr",
    "body": [
      "for /R \"${1:rootPath}\" %%${2:f} in (${3:file_pattern}) do (",
      "    echo %%${2:f}",
      "    $0",
      ")"
    ],
    "description": "Create a For /R loop in batch"
  },
  "For /F Loop": {
    "prefix": "forf",
    "body": [
      "for /F \"tokens=${1:1}* delims=${2:,}\" %%${3:a} in (${4:file_or_command}) do (",
      "    echo %%${3:a}",
      "    $0",
      ")"
    ],
    "description": "Create a For /F loop in batch"
  },
  "Turn Echo Off": {
    "prefix": "echo-off",
    "body": ["@echo off"],
    "description": "Turn command-echoing off"
  },
  "Go to End of Script": {
    "prefix": "eof",
    "body": ["goto :eof"],
    "description": "Go to the end of bat script"
  },
  "Push Directory": {
    "prefix": "pushd",
    "body": ["pushd \"${1:directory}\"", "$0", "popd"],
    "description": "Push directory onto stack and change to it"
  },
  "Enable Delayed Expansion": {
    "prefix": "setlocal",
    "body": ["setlocal enabledelayedexpansion"],
    "description": "Enable delayed environment variable expansion"
  },
  "Else Statement": {
    "prefix": "else",
    "body": [") else (", "    $0", ")"],
    "description": "Else statement for use in if-else constructs"
  }
}
