{
  "Batch File Header": {
    "prefix": "bfh",
    "description": "Create a basic batch file header",
    "body": [
      "@echo off",
      "setlocal enabledelayedexpansion",
      "",
      "rem ${1:Script description}",
      "",
      "$0"
    ]
  },
  "Check Error Level": {
    "prefix": "bce",
    "description": "Check whether exit code is equal to or greater than the number specified",
    "body": [
      "if %errorlevel% geq ${1:number} (",
      "    echo Error level is equal to or greater than ${1:number}",
      "    $0",
      ")"
    ]
  },
  "Command Line Arguments": {
    "prefix": "bcla",
    "description": "Handle command line arguments in batch",
    "body": [
      "if \"%1\"==\"\" (",
      "    echo Usage: %0 <argument>",
      "    exit /b 1",
      ")",
      "set \"arg1=%1\""
    ]
  },
  "Compare Strings": {
    "prefix": "bcs",
    "description": "Compare two strings",
    "body": [
      "if ${1|equ,neq,lss,leq,gtr,geq|} \"${2:string1}\" \"${3:string2}\" (",
      "    $0",
      ")"
    ]
  },
  "Conditional Execution": {
    "prefix": "bce",
    "description": "Execute a command based on the success of the previous command",
    "body": [
      "${1:first_command} && ${2:success_command} || ${3:failure_command}"
    ]
  },
  "Directory Creation": {
    "prefix": "bdc",
    "description": "Create a directory if it doesn't exist",
    "body": [
      "if not exist \"${1:directoryPath}\" mkdir \"${1:directoryPath}\""
    ]
  },
  "Else Statement": {
    "prefix": "bes",
    "description": "Else statement for use in if-else constructs",
    "body": [
      ") else (",
      "    $0",
      ")"
    ]
  },
  "Enable Delayed Expansion": {
    "prefix": "bede",
    "description": "Enable delayed environment variable expansion",
    "body": [
      "setlocal enabledelayedexpansion"
    ]
  },
  "Error Handling": {
    "prefix": "beh",
    "description": "Basic error handling in batch",
    "body": [
      "if errorlevel 1 (",
      "    echo An error occurred",
      "    exit /b 1",
      ")"
    ]
  },
  "File Existence Check": {
    "prefix": "bfec",
    "description": "Check if a file exists in batch",
    "body": [
      "if exist \"${1:filename}\" (",
      "    echo File exists",
      ") else (",
      "    echo File does not exist",
      ")"
    ]
  },
  "For /D Loop": {
    "prefix": "bfdl",
    "description": "Create a For /D loop in batch",
    "body": [
      "for /D %%${1:d} in (${2:directory_pattern}) do (",
      "    echo %%${1:d}",
      "    $0",
      ")"
    ]
  },
  "For /F Loop": {
    "prefix": "bffl",
    "description": "Create a For /F loop in batch",
    "body": [
      "for /F \"tokens=${1:1}* delims=${2:,}\" %%${3:a} in (${4:file_or_command}) do (",
      "    echo %%${3:a}",
      "    $0",
      ")"
    ]
  },
  "For /L Loop": {
    "prefix": "bfll",
    "description": "Create a For /L loop in batch",
    "body": [
      "for /L %%${1:i} in (${2:start},${3:step},${4:end}) do (",
      "    echo %%${1:i}",
      "    $0",
      ")"
    ]
  },
  "For /R Loop": {
    "prefix": "bfrl",
    "description": "Create a For /R loop in batch",
    "body": [
      "for /R \"${1:rootPath}\" %%${2:f} in (${3:file_pattern}) do (",
      "    echo %%${2:f}",
      "    $0",
      ")"
    ]
  },
  "For Loop": {
    "prefix": "bfl",
    "description": "Create a for loop in batch",
    "body": [
      "for %%${1:i} in (${2:item1 item2 item3}) do (",
      "    echo %%${1:i}",
      "    $0",
      ")"
    ]
  },
  "Function": {
    "prefix": "bfn",
    "description": "Create a function in batch",
    "body": [
      ":${1:functionName}",
      "$0",
      "goto :eof"
    ]
  },
  "Get Current Date": {
    "prefix": "bgcd",
    "description": "Get the current date in a specific format",
    "body": [
      "for /f \"tokens=1-4 delims=/ \" %%a in ('%DATE%') do (",
      "    set day=%%a",
      "    set month=%%b",
      "    set year=%%c",
      ")",
      "set \"currentDate=%year%-%month%-%day%\"",
      "echo Current date: %currentDate%"
    ]
  },
  "Get Current Time": {
    "prefix": "bgct",
    "description": "Get the current time",
    "body": [
      "for /f \"tokens=1-3 delims=:\" %%a in ('%TIME%') do (",
      "    set hour=%%a",
      "    set minute=%%b",
      "    set second=%%c",
      ")",
      "set \"currentTime=%hour%:%minute%:%second%\"",
      "echo Current time: %currentTime%"
    ]
  },
  "Go to End of Script": {
    "prefix": "bges",
    "description": "Go to the end of bat script",
    "body": [
      "goto :eof"
    ]
  },
  "If Statement": {
    "prefix": "bis",
    "description": "Create an if-else statement in batch",
    "body": [
      "if ${1:condition} (",
      "    $0",
      ") else (",
      "    ",
      ")"
    ]
  },
  "Push Directory": {
    "prefix": "bpd",
    "description": "Push directory onto stack and change to it",
    "body": [
      "pushd \"${1:directory}\"",
      "$0",
      "popd"
    ]
  },
  "Read User Input": {
    "prefix": "brui",
    "description": "Read user input in batch",
    "body": [
      "set /p \"${1:variableName}=${2:Enter a value: }\""
    ]
  },
  "Set Variable": {
    "prefix": "bsv",
    "description": "Set a variable in batch",
    "body": [
      "set \"${1:variableName}=${2:value}\""
    ]
  },
  "Start New Process": {
    "prefix": "bsnp",
    "description": "Start a new process",
    "body": [
      "start \"\" ${1:command}"
    ]
  },
  "Timed Command": {
    "prefix": "btc",
    "description": "Execute a command after a specified delay",
    "body": [
      "timeout /t ${1:seconds} /nobreak > nul",
      "${2:command}"
    ]
  },
  "Turn Echo Off": {
    "prefix": "bteo",
    "description": "Turn command-echoing off",
    "body": [
      "@echo off"
    ]
  }
}